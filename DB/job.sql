-- MySQL Script generated by MySQL Workbench
-- 04/01/16 09:54:22
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema job
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `job` ;

-- -----------------------------------------------------
-- Schema job
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `job` DEFAULT CHARACTER SET utf8 ;
USE `job` ;

-- -----------------------------------------------------
-- Table `job`.`educations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`educations` ;

CREATE TABLE IF NOT EXISTS `job`.`educations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ru` VARCHAR(100) NOT NULL,
  `en` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `job`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`users` ;

CREATE TABLE IF NOT EXISTS `job`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `lastName` VARCHAR(45) NOT NULL COMMENT 'фамилия',
  `firstName` VARCHAR(45) NOT NULL COMMENT 'имя',
  `patronymic` VARCHAR(45) NOT NULL COMMENT 'отчество',
  `yearOfBirth` DATE NOT NULL COMMENT 'Год рождения',
  `sex` ENUM('1', '2') NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(33) NOT NULL,
  `educations_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `xEmail` (`email` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_users_educations1_idx` (`educations_id` ASC),
  CONSTRAINT `fk_users_educations1`
    FOREIGN KEY (`educations_id`)
    REFERENCES `job`.`educations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `job`.`works`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`works` ;

CREATE TABLE IF NOT EXISTS `job`.`works` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Опыт работы ',
  `organization` VARCHAR(255) NOT NULL COMMENT 'организация',
  `post` VARCHAR(100) NOT NULL COMMENT 'должность',
  `jobStartMonth` TINYINT NOT NULL COMMENT 'начало работы месяц',
  `jobStartYear` SMALLINT(4) NOT NULL COMMENT 'начало работы год',
  `forNow` TINYINT(1) NULL DEFAULT 0 COMMENT 'По настоящее время',
  `jobStopMonth` TINYINT NULL COMMENT 'начало работы месяц',
  `jobStopYear` SMALLINT(4) NULL COMMENT 'окончание работы год',
  `duties` VARCHAR(1024) NULL COMMENT 'обязанности',
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_workExperiences_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_workExperiences_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `job`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `job`.`phones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`phones` ;

CREATE TABLE IF NOT EXISTS `job`.`phones` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Контактная информация (телефон (-ы) и т.п.)',
  `phone` VARCHAR(10) NOT NULL DEFAULT '-',
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_phones_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_phones_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `job`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `job`.`locations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`locations` ;

CREATE TABLE IF NOT EXISTS `job`.`locations` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Место проживания',
  `name` VARCHAR(45) NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_locations_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_locations_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `job`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `job`.`maritalStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`maritalStatus` ;

CREATE TABLE IF NOT EXISTS `job`.`maritalStatus` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Семейное положение',
  `name` VARCHAR(45) NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_maritalStatus_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_maritalStatus_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `job`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `job`.`abouts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`abouts` ;

CREATE TABLE IF NOT EXISTS `job`.`abouts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `about` VARCHAR(1024) NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_abouts_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_abouts_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `job`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `job`.`photos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `job`.`photos` ;

CREATE TABLE IF NOT EXISTS `job`.`photos` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `patch` VARCHAR(255) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `size` INT NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_photos_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_photos_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `job`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `job` ;

-- -----------------------------------------------------
-- procedure getUserInfo
-- -----------------------------------------------------

USE `job`;
DROP procedure IF EXISTS `job`.`getUserInfo`;

DELIMITER $$
USE `job`$$
CREATE PROCEDURE `getUserInfo` (IN userId INT)
BEGIN
	SELECT 
		u.lastName,
		u.firstName,
		u.patronymic,
		DATE_FORMAT(u.yearOfBirth, '%d.%m.%Y') AS yearOfBirth,
		u.sex,
		u.email,
		u.password,
		e.en,
		e.ru,
		l.name as lName,
		m.name as mName,
		a.about,
		(p.id) AS photoId,
		w.organization,
		w.post,
		w.jobStartMonth,
		w.jobStartYear,
		w.forNow,
		w.jobStopMonth,
		w.jobStopYear,
		w.duties,
		c.phone
	FROM (SELECT * FROM users WHERE users.id = userId) AS u
	LEFT JOIN locations AS l
	ON u.id = l.users_id

	LEFT JOIN maritalStatus AS m
	ON u.id = m.users_id

	LEFT JOIN educations AS e
	ON u.educations_id = e.id

	LEFT JOIN abouts AS a
	ON u.id = a.users_id

	LEFT JOIN photos AS p
	ON u.id = p.users_id

	LEFT JOIN works AS w
	ON u.id = w.users_id

	LEFT JOIN phones AS c
	ON u.id = c.users_id;

END
$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `job`.`educations`
-- -----------------------------------------------------
START TRANSACTION;
USE `job`;
INSERT INTO `job`.`educations` (`id`, `ru`, `en`) VALUES (1, '-', '-');
INSERT INTO `job`.`educations` (`id`, `ru`, `en`) VALUES (2, 'Высшее', 'Higher');
INSERT INTO `job`.`educations` (`id`, `ru`, `en`) VALUES (3, 'Среднее', 'Average');

COMMIT;

